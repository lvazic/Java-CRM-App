/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import domen.Kupac;
import domen.Prodaja;
import domen.Proizvod;
import domen.StavkaProdaje;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.TableColumn;
import logic.Kontroler;
import transfer.KlijentTransferObjekat;
import transfer.ServerTransferObjekat;
import view.model.TableModelStavkeProdaje;

/**
 *
 * @author lvazi_000
 */
public class JPanelUnosProdaje extends javax.swing.JPanel {

    TableModelStavkeProdaje model;

    Prodaja p;

    /**
     * Creates new form JPanelUnosProdaje
     */
    public JPanelUnosProdaje() {
        initComponents();
        pripremiFormu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelProdaja = new javax.swing.JPanel();
        jLabelDatumProdaje = new javax.swing.JLabel();
        jTextFieldDatumProdaje = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldKomercijalista = new javax.swing.JTextField();
        jButtonNapraviProdaju = new javax.swing.JButton();
        jLabelKupac = new javax.swing.JLabel();
        jComboBoxKupac = new javax.swing.JComboBox();
        jPanelStavkeProdaje = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableStavkeProdaje = new javax.swing.JTable();
        jButtonDodajStavku = new javax.swing.JButton();
        jButtonObrisiStavku = new javax.swing.JButton();
        jButtonSacuvajProdaju = new javax.swing.JButton();

        jPanelProdaja.setBorder(javax.swing.BorderFactory.createTitledBorder("Prodaja"));

        jLabelDatumProdaje.setText("Datum prodaje:");

        jLabel1.setText("Komercijalista:");

        jButtonNapraviProdaju.setText("Napravi prodaju");
        jButtonNapraviProdaju.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNapraviProdajuActionPerformed(evt);
            }
        });

        jLabelKupac.setText("Kupac:");

        jComboBoxKupac.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanelProdajaLayout = new javax.swing.GroupLayout(jPanelProdaja);
        jPanelProdaja.setLayout(jPanelProdajaLayout);
        jPanelProdajaLayout.setHorizontalGroup(
            jPanelProdajaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelProdajaLayout.createSequentialGroup()
                .addGroup(jPanelProdajaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelProdajaLayout.createSequentialGroup()
                        .addComponent(jLabelDatumProdaje)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldDatumProdaje))
                    .addComponent(jButtonNapraviProdaju, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelProdajaLayout.createSequentialGroup()
                        .addGroup(jPanelProdajaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabelKupac))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelProdajaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldKomercijalista)
                            .addComponent(jComboBoxKupac, 0, 250, Short.MAX_VALUE))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanelProdajaLayout.setVerticalGroup(
            jPanelProdajaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelProdajaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelProdajaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDatumProdaje)
                    .addComponent(jTextFieldDatumProdaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanelProdajaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelKupac, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jComboBoxKupac, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelProdajaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldKomercijalista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButtonNapraviProdaju)
                .addContainerGap())
        );

        jPanelStavkeProdaje.setBorder(javax.swing.BorderFactory.createTitledBorder("Stavke prodaje"));

        jTableStavkeProdaje.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableStavkeProdaje);

        jButtonDodajStavku.setText("Dodaj stavku prodaje");
        jButtonDodajStavku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDodajStavkuActionPerformed(evt);
            }
        });

        jButtonObrisiStavku.setText("Obriši stavku prodaje");
        jButtonObrisiStavku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonObrisiStavkuActionPerformed(evt);
            }
        });

        jButtonSacuvajProdaju.setText("Sačuvaj prodaju");
        jButtonSacuvajProdaju.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSacuvajProdajuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelStavkeProdajeLayout = new javax.swing.GroupLayout(jPanelStavkeProdaje);
        jPanelStavkeProdaje.setLayout(jPanelStavkeProdajeLayout);
        jPanelStavkeProdajeLayout.setHorizontalGroup(
            jPanelStavkeProdajeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelStavkeProdajeLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanelStavkeProdajeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonDodajStavku, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonObrisiStavku, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonSacuvajProdaju, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelStavkeProdajeLayout.setVerticalGroup(
            jPanelStavkeProdajeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelStavkeProdajeLayout.createSequentialGroup()
                .addGroup(jPanelStavkeProdajeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelStavkeProdajeLayout.createSequentialGroup()
                        .addComponent(jButtonDodajStavku)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonObrisiStavku)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonSacuvajProdaju)))
                .addGap(0, 71, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelStavkeProdaje, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelProdaja, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelProdaja, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanelStavkeProdaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonObrisiStavkuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonObrisiStavkuActionPerformed

        int i = jTableStavkeProdaje.getSelectedRow();

        if (i == -1) {
            JOptionPane.showMessageDialog(this, "Niste izabrali red!", "Greška", JOptionPane.ERROR_MESSAGE);
        } else {

            model.getStavke().remove(i);
            model.fireTableDataChanged();
            JOptionPane.showMessageDialog(this, "Obrisali ste stavku", "Obaveštenje", JOptionPane.INFORMATION_MESSAGE);

        }
    }//GEN-LAST:event_jButtonObrisiStavkuActionPerformed

    private void jButtonNapraviProdajuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNapraviProdajuActionPerformed

        try {
            SimpleDateFormat sdf = new SimpleDateFormat("dd.mm.yyyy");
            Date datum = sdf.parse(jTextFieldDatumProdaje.getText());

            p = Kontroler.getInstance().napraviProdaju();
            p.setDatum(datum);
            p.setKupac((Kupac) jComboBoxKupac.getSelectedItem());
            p.setKupid(p.getKupac().getKupid());
            

            JOptionPane.showMessageDialog(this, "Sistem je napravio novu prodaju.", "Obaveštenje", JOptionPane.INFORMATION_MESSAGE);

            jButtonDodajStavku.setEnabled(true);
            jButtonObrisiStavku.setEnabled(true);
            jButtonSacuvajProdaju.setEnabled(true);
        } catch (Exception ex) {
            Logger.getLogger(JPanelUnosProdaje.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Sistem ne može da kreira novu prodaju.", "Greška", JOptionPane.ERROR_MESSAGE);

        }


    }//GEN-LAST:event_jButtonNapraviProdajuActionPerformed

    private void jButtonDodajStavkuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDodajStavkuActionPerformed

        StavkaProdaje sp = new StavkaProdaje(0, 0, 0, 0, 0, p, Kontroler.getInstance().getProizvodi().get(0));
        model.getStavke().add(sp);
        model.fireTableDataChanged();


    }//GEN-LAST:event_jButtonDodajStavkuActionPerformed

    private void jButtonSacuvajProdajuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSacuvajProdajuActionPerformed

        try {
            p.setStavke(model.getStavke());

           

            Kontroler.getInstance().sacuvajProdaju(p);
            JOptionPane.showMessageDialog(this, "Sistem je zapamtio prodaju ", "Obaveštenje", JOptionPane.INFORMATION_MESSAGE);
            jTextFieldDatumProdaje.setText("");
            model = new TableModelStavkeProdaje();
            jTableStavkeProdaje.setModel(model);
            jButtonDodajStavku.setEnabled(false);
            jButtonObrisiStavku.setEnabled(false);
            jButtonSacuvajProdaju.setEnabled(false);
            jButtonNapraviProdaju.setEnabled(true);

            
        } catch (Exception ex) {

            Logger.getLogger(JPanelUnosProdaje.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Sistem ne može da zapamti novu prodaju ", "Greška", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
            System.out.println("PORUKA \n" + ex.getMessage());
        }


    }//GEN-LAST:event_jButtonSacuvajProdajuActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDodajStavku;
    private javax.swing.JButton jButtonNapraviProdaju;
    private javax.swing.JButton jButtonObrisiStavku;
    private javax.swing.JButton jButtonSacuvajProdaju;
    private javax.swing.JComboBox jComboBoxKupac;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelDatumProdaje;
    private javax.swing.JLabel jLabelKupac;
    private javax.swing.JPanel jPanelProdaja;
    private javax.swing.JPanel jPanelStavkeProdaje;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableStavkeProdaje;
    private javax.swing.JTextField jTextFieldDatumProdaje;
    private javax.swing.JTextField jTextFieldKomercijalista;
    // End of variables declaration//GEN-END:variables

    private void pripremiFormu() {

        jButtonDodajStavku.setEnabled(false);
        jButtonObrisiStavku.setEnabled(false);
        jButtonSacuvajProdaju.setEnabled(false);

        try {
            jComboBoxKupac.setModel(new DefaultComboBoxModel(Kontroler.getInstance().vratiKupce().toArray()));
        } catch (Exception ex) {
            Logger.getLogger(JPanelUnosProdaje.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Nije moguće učitati listu kupaca!", "Greška", JOptionPane.ERROR_MESSAGE);

        }

        try {
            jTextFieldKomercijalista.setText(Kontroler.getInstance().getKomercijalista().toString());
            jTextFieldKomercijalista.setEditable(false);

            model = new TableModelStavkeProdaje();
            jTableStavkeProdaje.setModel(model);

            TableColumn kolona = jTableStavkeProdaje.getColumnModel().getColumn(0);
            JComboBox jComboBoxProizvod = new JComboBox(new DefaultComboBoxModel(Kontroler.getInstance().vratiProizvode().toArray()));
            kolona.setCellEditor(new DefaultCellEditor(jComboBoxProizvod));

            

            jComboBoxProizvod.addActionListener(new ActionListener() {

                @Override
                public void actionPerformed(ActionEvent e) {

                    model.fireTableDataChanged();

                }
            });

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Nije moguće učitati listu proizvoda!", "Greška", JOptionPane.ERROR_MESSAGE);

            Logger.getLogger(JPanelUnosProdaje.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
}
